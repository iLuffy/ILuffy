//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ILuffy.IOP.Configuration
{
    
    
    /// <summary>
    /// The IOPConfigurationSection Configuration Section.
    /// </summary>
    public partial class IOPConfigurationSection : global::System.Configuration.ConfigurationSection
    {
        
        #region Singleton Instance
        /// <summary>
        /// The XML name of the IOPConfigurationSection Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string IOPConfigurationSectionSectionName = "iopConfigurationSection";
        
        /// <summary>
        /// The XML path of the IOPConfigurationSection Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string IOPConfigurationSectionSectionPath = "iopConfigurationSection";
        
        /// <summary>
        /// Gets the IOPConfigurationSection instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public static global::ILuffy.IOP.Configuration.IOPConfigurationSection Instance
        {
            get
            {
                return ((global::ILuffy.IOP.Configuration.IOPConfigurationSection)(global::System.Configuration.ConfigurationManager.GetSection(global::ILuffy.IOP.Configuration.IOPConfigurationSection.IOPConfigurationSectionSectionPath)));
            }
        }
        #endregion
        
        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string XmlnsPropertyName = "xmlns";
        
        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ILuffy.IOP.Configuration.IOPConfigurationSection.XmlnsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::ILuffy.IOP.Configuration.IOPConfigurationSection.XmlnsPropertyName]));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Logger Property
        /// <summary>
        /// The XML name of the <see cref="Logger"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string LoggerPropertyName = "logger";
        
        /// <summary>
        /// Gets or sets the Logger.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The Logger.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ILuffy.IOP.Configuration.IOPConfigurationSection.LoggerPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::ILuffy.IOP.Configuration.LoggerConfigurationElement Logger
        {
            get
            {
                return ((global::ILuffy.IOP.Configuration.LoggerConfigurationElement)(base[global::ILuffy.IOP.Configuration.IOPConfigurationSection.LoggerPropertyName]));
            }
            set
            {
                base[global::ILuffy.IOP.Configuration.IOPConfigurationSection.LoggerPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace ILuffy.IOP.Configuration
{
    
    
    /// <summary>
    /// The LoggerConfigurationElement Configuration Element.
    /// </summary>
    public partial class LoggerConfigurationElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region FlushInterval Property
        /// <summary>
        /// The XML name of the <see cref="FlushInterval"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string FlushIntervalPropertyName = "flushInterval";
        
        /// <summary>
        /// Gets or sets the FlushInterval.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The FlushInterval.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ILuffy.IOP.Configuration.LoggerConfigurationElement.FlushIntervalPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual int FlushInterval
        {
            get
            {
                return ((int)(base[global::ILuffy.IOP.Configuration.LoggerConfigurationElement.FlushIntervalPropertyName]));
            }
            set
            {
                base[global::ILuffy.IOP.Configuration.LoggerConfigurationElement.FlushIntervalPropertyName] = value;
            }
        }
        #endregion
        
        #region MaxLoggers Property
        /// <summary>
        /// The XML name of the <see cref="MaxLoggers"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string MaxLoggersPropertyName = "maxLoggers";
        
        /// <summary>
        /// Gets or sets the MaxLoggers.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The MaxLoggers.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ILuffy.IOP.Configuration.LoggerConfigurationElement.MaxLoggersPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual int MaxLoggers
        {
            get
            {
                return ((int)(base[global::ILuffy.IOP.Configuration.LoggerConfigurationElement.MaxLoggersPropertyName]));
            }
            set
            {
                base[global::ILuffy.IOP.Configuration.LoggerConfigurationElement.MaxLoggersPropertyName] = value;
            }
        }
        #endregion
        
        #region IsMultipleThreadEnabled Property
        /// <summary>
        /// The XML name of the <see cref="IsMultipleThreadEnabled"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string IsMultipleThreadEnabledPropertyName = "isMultipleThreadEnabled";
        
        /// <summary>
        /// Gets or sets the IsMultipleThreadEnabled.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The IsMultipleThreadEnabled.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ILuffy.IOP.Configuration.LoggerConfigurationElement.IsMultipleThreadEnabledPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual bool IsMultipleThreadEnabled
        {
            get
            {
                return ((bool)(base[global::ILuffy.IOP.Configuration.LoggerConfigurationElement.IsMultipleThreadEnabledPropertyName]));
            }
            set
            {
                base[global::ILuffy.IOP.Configuration.LoggerConfigurationElement.IsMultipleThreadEnabledPropertyName] = value;
            }
        }
        #endregion
    }
}
